/*const gsapTl = new TimelineMax();

gsapTl
    .set('.pg-title, .info.img, .intro-info,.lrg-text-holder, .mini-info-blr, .contact-flex', { opacity: 0 })
    .staggerFrom('.nav-link', 0.5, { opacity: 0, ease: "power4.in" }, 0.1)
    .to('.pg-title', 0.5, { opacity: 1, ease: "Linear.easeIn" })
    .to('.info-img', 0.5, { y: 5, opacity: 1, ease: "Linear.easeIn" })



*/


barba.init({
    transitions: [{
        name: 'opacity-transition',
        leave(data) {
            return gsap.to(data.current.container, {
                opacity: 0
            });
        },
        enter(data) {
            return gsap.from(data.next.container, {
                opacity: 0
            });
        }
    }]
});




let menuTag = document.querySelector('.menu-icon');
let navLinks = Array.from(document.querySelectorAll('.nav-link'));
let menuSocials = document.querySelector('.menu-socials');
let nav = document.querySelector('.menu-holder');


menuTag.addEventListener("click", () => {
    if (menuTag.innerHTML === "menu") {
        menuTag.innerHTML = "close";
    } else {
        menuTag.innerHTML = "menu";
    }


    nav.classList.toggle('active');
    menuSocials.classList.toggle('active');

    if (nav.classList.contains('active')) {
        for (let i = 0; i < navLinks.length; i++) {
            navLinks[i].classList.remove('active');
            setTimeout(() => {
                navLinks[i].classList.add('active')
            }, i * 200)
        }

        setTimeout(() => {
            menuSocials.classList.add('active');
        }, 700);

    }

});


filterObjects("all");

function filterObjects(c) {
    var x, i;
    x = document.getElementsByClassName("proj");
    if (c == "all") c = " ";
    for (i = 0; i < x.length; i++) {
        removeClass(x[i], "showww");
        if (x[i].className.indexOf(c) > -1) addClass(x[i], "showww")
    }
}

function addClass(element, name) {
    var i, arr1, arr2;
    arr1 = element.className.split(" ");
    arr2 = name.split(" ");
    for (i = 0; i < arr2.length; i++) {
        if (arr1.indexOf(arr2[i]) == -1) {
            element.className += " " + arr2[i];
        }
    }
}

function removeClass(element, name) {
    var i, arr1, arr2;
    arr1 = element.className.split(" ");
    arr2 = name.split(" ");
    for (i = 0; i < arr2.length; i++) {
        while (arr1.indexOf(arr2[i]) > -1) {
            arr1.splice(arr1.indexOf(arr2[i]), 1);
        }
    }
    element.className = arr1.join(" ");
}


let sliderWrap = document.querySelector('.slider-wrap');
let slider = document.querySelector('.slider');
let clonesWidth;
let sliderWidth;
let clones = [];
let disableScroll = false;
let scrollPos;

let items = [...document.querySelectorAll('.slider-item')];


items.forEach(item => {
    let clone = item.cloneNode(true);
    clone.classList.add('clone');
    slider.appendChild(clone);
    clones.push(clone);
})


function getClonesWidth() {
    let width = 0;
    clones.forEach(clone => {
        width += clone.offsetWidth;
    })
    return width;
}

function getScrollPos() {
    return window.scrollY;
}



function scrollUpdate() {
    if (window.innerWidth > 760) {
        sliderWrap.style.overflow = 'hidden';
        scrollPos = getScrollPos();
        if (clonesWidth + scrollPos >= sliderWidth) {
            window.scrollTo({ top: 1 });
        } else if (scrollPos <= 0) {
            window.scrollTo({ top: sliderWidth - clonesWidth - 1 });
        }

        slider.style.transform = `translateX(${-window.scrollY}px)`

        requestAnimationFrame(scrollUpdate)
    } else {
        sliderWrap.style.overflow = 'scroll';
    }

}

window.addEventListener('resize', onLoad)

function onLoad() {
    calculateDimensions()
    document.body.style.height = `${sliderWidth}px`
    window.scrollTo({ top: 1 });
    scrollUpdate();
}

function calculateDimensions() {
    sliderWidth = slider.getBoundingClientRect().width;
    clonesWidth = getClonesWidth();
}

onLoad();



